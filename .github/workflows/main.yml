name: Main

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

jobs:
  main:

    strategy:
      fail-fast: true
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
        os: ['ubuntu-20.04', 'ubuntu-22.04', 'macos-12', 'macos-13', 'windows-2019', 'windows-2022']

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache Python Dependencies
        uses: actions/cache@v4
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ runner.os }}-os:${{ matrix.os }}-python:${{ matrix.python-version }}-${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}-${{ hashFiles('requirements.txt') }}

      - name: Install Dependencies
        shell: bash
        run: pip3 install -U -r requirements.txt

      - name: Check Python Version Compatibility
        shell: bash
        run: vermin --no-tips --no-parse-comments --exclude ast.unparse --target=3.8- --violations autograder

      - name: Run Tests
        shell: bash
        run: ./run_tests.py

      - name: Check Style
        shell: bash
        run: ./.ci/check_style.sh

  verify-test-data:

    needs: main

    strategy:
      matrix:
        python-version: ['3.11']
        os: ['ubuntu-22.04']

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache Python Dependencies
        uses: actions/cache@v4
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ runner.os }}-os:${{ matrix.os }}-python:${{ matrix.python-version }}-${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}-${{ hashFiles('requirements.txt') }}

      - name: Install Dependencies
        shell: bash
        run: pip3 install -U -r requirements.txt

      - name: Check Python Version Compatibility
        shell: bash
        run: vermin --no-tips --no-parse-comments --exclude ast.unparse --target=3.8- --violations autograder

      - name: Verify Test Data
        shell: bash
        run: ./.ci/verify_test_api_requests.py --docker
